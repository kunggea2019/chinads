// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: 'dependencies.gradle'
buildscript {
    ext.kotlin_version = "1.3.72"
    repositories {
        google()
        jcenter()
        maven {
            url 'https://jitpack.io'
        }
        maven {
            url 'http://localhost:8081/repository/maven-releases/'
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.alibaba:arouter-register:1.0.2"
        classpath 'com.hujiang.aspectjx:gradle-android-plugin-aspectjx:2.0.10'
        classpath 'com.novoda:bintray-release:0.8.1'
        classpath 'com.tiens.plugin:lib_plugin:1.0.1'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google {
            url 'https://maven.aliyun.com/repository/google'
        }
        jcenter {
            url 'https://maven.aliyun.com/repository/jcenter'
        }
        mavenCentral {
            url 'https://maven.aliyun.com/repository/central'
        }
        maven {
            url 'https://jitpack.io'
        }
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        maven {
            url 'https://oss.sonatype.org/content/repositories/public'
        }
        maven {
            url 'http://localhost:8081/repository/maven-releases/'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

project('app') {Project project ->
    println project.name
    apply plugin: 'com.android.application'
}
subprojects { Project project ->
    if(project.plugins.hasPlugin('com.android.library')) {

    }
}

println getRootDir().absolutePath
println getBuildDir().absolutePath
println getProjectDir().absolutePath

def getContent(String path) {
    try {
        def file = file(path)
        return file.text
    } catch(GradleException e) {
        println 'file not found...'
    }
    return null
}